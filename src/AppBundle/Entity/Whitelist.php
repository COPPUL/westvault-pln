<?php

namespace AppBundle\Entity;

use DateTime;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Whitelist
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="WhitelistRepository")
 */
class Whitelist {

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * Journal UUID, as generated by the PLN plugin. This cannot be part
     * of a relationship - a journal may be listed before we have
     * a record of it.
     *
     * @var string
     * @Assert\Uuid
     * @ORM\Column(type="string", length=36, nullable=false)
     */
    private $uuid;
    
    /**
     * Short message describing why the journal was listed.
     *
     * @var string
     * @ORM\Column(type="text")
     */
    private $comment;

    /**
     * The whitelist entry was created.
     *
     * @var Datetime
     * @ORM\Column(type="datetime")
     */
    private $created;

    public function __construct() {
        $this->created = new DateTime();
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }


    /**
     * Set uuid
     *
     * @param string $uuid
     * @return Whitelist
     */
    public function setUuid($uuid)
    {
        $this->uuid = strtoupper($uuid);

        return $this;
    }

    /**
     * Get uuid
     *
     * @return string 
     */
    public function getUuid()
    {
        return $this->uuid;
    }

    /**
     * Set created
     *
     * @param DateTime $created
     * @return Whitelist
     */
    public function setCreated(DateTime $created)
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Get created
     *
     * @return DateTime 
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set comment
     *
     * @param string $comment
     * @return Whitelist
     */
    public function setComment($comment)
    {
        $this->comment = $comment;

        return $this;
    }

    /**
     * Get comment
     *
     * @return string 
     */
    public function getComment()
    {
        return $this->comment;
    }
    
    public function __toString() {
        return $this->uuid;
    }
}
